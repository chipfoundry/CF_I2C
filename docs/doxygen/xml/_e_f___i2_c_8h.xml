<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="_e_f___i2_c_8h" kind="file" language="C++">
    <compoundname>EF_I2C.h</compoundname>
    <includes refid="_e_f___i2_c__regs_8h" local="yes">EF_I2C_regs.h</includes>
    <includes refid="_e_f___driver___common_8h" local="yes">EF_Driver_Common.h</includes>
    <includedby refid="_e_f___i2_c_8c" local="yes">EF_I2C.c</includedby>
    <incdepgraph>
      <node id="3">
        <label>EF_Driver_Common.h</label>
        <link refid="_e_f___driver___common_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>EF_I2C.h</label>
        <link refid="_e_f___i2_c_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>EF_I2C_regs.h</label>
        <link refid="_e_f___i2_c__regs_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>stdbool.h</label>
      </node>
      <node id="6">
        <label>stddef.h</label>
      </node>
      <node id="4">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>EF_I2C.c</label>
        <link refid="_e_f___i2_c_8c"/>
      </node>
      <node id="1">
        <label>EF_I2C.h</label>
        <link refid="_e_f___i2_c_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_e_f___i2_c_8h_1acc45aacbd2537a2bff4c031f31866524" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setGclkEnable</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t value)</argsstring>
        <name>EF_I2C_setGclkEnable</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="48" column="18" bodyfile="EF_I2C.c" bodystart="55" bodyend="58" declfile="EF_I2C.h" declline="48" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a0f58ec9c8e2833a317849f6e7397f975" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_writeAddress</definition>
        <argsstring>(EF_I2C_PTR i2c, char addr)</argsstring>
        <name>EF_I2C_writeAddress</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>char</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="49" column="18" bodyfile="EF_I2C.c" bodystart="74" bodyend="81" declfile="EF_I2C.h" declline="49" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1af9b99ab7d998d458b3581d4efa7d5677" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_startCmd</definition>
        <argsstring>(EF_I2C_PTR i2c)</argsstring>
        <name>EF_I2C_startCmd</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="50" column="18" bodyfile="EF_I2C.c" bodystart="83" bodyend="86" declfile="EF_I2C.h" declline="50" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a3f4fc47dc287dc172380017f5ba1ba76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_readCmd</definition>
        <argsstring>(EF_I2C_PTR i2c, char addr)</argsstring>
        <name>EF_I2C_readCmd</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>char</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="51" column="18" bodyfile="EF_I2C.c" bodystart="88" bodyend="91" declfile="EF_I2C.h" declline="51" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a65d02666b30dfa93ff84c2f050f0c4d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_writeCmd</definition>
        <argsstring>(EF_I2C_PTR i2c, char addr)</argsstring>
        <name>EF_I2C_writeCmd</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>char</type>
          <declname>addr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="52" column="18" bodyfile="EF_I2C.c" bodystart="93" bodyend="96" declfile="EF_I2C.h" declline="52" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a32c3ace7f086e924ccf2d2a516781e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_writeMultipleCmd</definition>
        <argsstring>(EF_I2C_PTR i2c)</argsstring>
        <name>EF_I2C_writeMultipleCmd</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="53" column="18" bodyfile="EF_I2C.c" bodystart="98" bodyend="101" declfile="EF_I2C.h" declline="53" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a41f2c6eaa708acaf5ec335305d081ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_stopCmd</definition>
        <argsstring>(EF_I2C_PTR i2c)</argsstring>
        <name>EF_I2C_stopCmd</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="54" column="18" bodyfile="EF_I2C.c" bodystart="103" bodyend="106" declfile="EF_I2C.h" declline="54" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a463bc65949c17db4ea88309a639196cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setCommandReg</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t value)</argsstring>
        <name>EF_I2C_setCommandReg</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="55" column="18" bodyfile="EF_I2C.c" bodystart="108" bodyend="111" declfile="EF_I2C.h" declline="55" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1aeb43294563fcfca9026b591d8e56281b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getCommandReg</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *command_value)</argsstring>
        <name>EF_I2C_getCommandReg</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>command_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="56" column="18" bodyfile="EF_I2C.c" bodystart="113" bodyend="116" declfile="EF_I2C.h" declline="56" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a36095bc30b2815da2586e7ca9d00dc07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_writeData</definition>
        <argsstring>(EF_I2C_PTR i2c, char data)</argsstring>
        <name>EF_I2C_writeData</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>char</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="57" column="18" bodyfile="EF_I2C.c" bodystart="118" bodyend="126" declfile="EF_I2C.h" declline="57" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a6cf63669e5cff65a8c0179c3ee604e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_readData</definition>
        <argsstring>(EF_I2C_PTR i2c, char *data)</argsstring>
        <name>EF_I2C_readData</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="58" column="18" bodyfile="EF_I2C.c" bodystart="128" bodyend="137" declfile="EF_I2C.h" declline="58" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1adf55e1d9c0e04ce14f02b203cc162eb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setDataValid</definition>
        <argsstring>(EF_I2C_PTR i2c, bool valid)</argsstring>
        <name>EF_I2C_setDataValid</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="59" column="18" bodyfile="EF_I2C.c" bodystart="139" bodyend="145" declfile="EF_I2C.h" declline="59" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a0b9bab5ff86b97332323d405b91c6458" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getDataValid</definition>
        <argsstring>(EF_I2C_PTR i2c, bool *data_valid)</argsstring>
        <name>EF_I2C_getDataValid</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>data_valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="60" column="18" bodyfile="EF_I2C.c" bodystart="147" bodyend="153" declfile="EF_I2C.h" declline="60" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a4508f26e14e7749976583e7edaa6dfb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setDataLast</definition>
        <argsstring>(EF_I2C_PTR i2c, bool valid)</argsstring>
        <name>EF_I2C_setDataLast</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>valid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="61" column="18" bodyfile="EF_I2C.c" bodystart="155" bodyend="161" declfile="EF_I2C.h" declline="61" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a2f2106493a872e461d9636ffea9bdc3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getDataLast</definition>
        <argsstring>(EF_I2C_PTR i2c, bool *data_last)</argsstring>
        <name>EF_I2C_getDataLast</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>bool *</type>
          <declname>data_last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="62" column="18" bodyfile="EF_I2C.c" bodystart="163" bodyend="169" declfile="EF_I2C.h" declline="62" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a31085c48c88225577f50d3aa775a207e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setDataReg</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t value)</argsstring>
        <name>EF_I2C_setDataReg</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="63" column="18" bodyfile="EF_I2C.c" bodystart="171" bodyend="174" declfile="EF_I2C.h" declline="63" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a25225abd1caf2eaabd63c0fefc300e3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getDataReg</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *data_reg_value)</argsstring>
        <name>EF_I2C_getDataReg</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>data_reg_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="64" column="18" bodyfile="EF_I2C.c" bodystart="176" bodyend="179" declfile="EF_I2C.h" declline="64" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a31eb5194bd0194de3b76fc5a6a55de01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setPrescaler</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t value)</argsstring>
        <name>EF_I2C_setPrescaler</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="65" column="18" bodyfile="EF_I2C.c" bodystart="181" bodyend="184" declfile="EF_I2C.h" declline="65" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1aaf918c88e2ad08276957215d7e92be11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getPrescaler</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *prescaler_value)</argsstring>
        <name>EF_I2C_getPrescaler</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>prescaler_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="66" column="18" bodyfile="EF_I2C.c" bodystart="186" bodyend="189" declfile="EF_I2C.h" declline="66" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a9734206e847e18e8200a755541ded839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getRIS</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *ris_value)</argsstring>
        <name>EF_I2C_getRIS</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>ris_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="67" column="18" bodyfile="EF_I2C.c" bodystart="191" bodyend="194" declfile="EF_I2C.h" declline="67" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a116c0ec466973c1798769ca2a6072d44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getMIS</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *mis_value)</argsstring>
        <name>EF_I2C_getMIS</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>mis_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="68" column="18" bodyfile="EF_I2C.c" bodystart="196" bodyend="199" declfile="EF_I2C.h" declline="68" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1ae75ed322a00e605f0489213ee29d7230" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_setIM</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t mask)</argsstring>
        <name>EF_I2C_setIM</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>mask</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="69" column="18" bodyfile="EF_I2C.c" bodystart="201" bodyend="204" declfile="EF_I2C.h" declline="69" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="_e_f___i2_c_8h_1a68f8ca9c1674b72b2b5045f00e0986a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref></type>
        <definition>EF_DRIVER_STATUS EF_I2C_getIM</definition>
        <argsstring>(EF_I2C_PTR i2c, uint32_t *im_value)</argsstring>
        <name>EF_I2C_getIM</name>
        <param>
          <type><ref refid="_e_f___i2_c__regs_8h_1affb413da2854fa5bbd6d42b9b0c4e73f" kindref="member">EF_I2C_PTR</ref></type>
          <declname>i2c</declname>
        </param>
        <param>
          <type>uint32_t *</type>
          <declname>im_value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="EF_I2C.h" line="70" column="18" bodyfile="EF_I2C.c" bodystart="206" bodyend="209" declfile="EF_I2C.h" declline="70" declcolumn="18"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>C header file for I2C APIs which contains the function prototypes. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>2025<sp/>Efabless<sp/>Corp.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>Licensed<sp/>under<sp/>the<sp/>Apache<sp/>License,<sp/>Version<sp/>2.0<sp/>(the<sp/>&quot;License&quot;);</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>you<sp/>may<sp/>not<sp/>use<sp/>this<sp/>file<sp/>except<sp/>in<sp/>compliance<sp/>with<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>may<sp/>obtain<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>License<sp/>at</highlight></codeline>
<codeline lineno="8"><highlight class="comment"></highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>www.apache.org/licenses/LICENSE-2.0</highlight></codeline>
<codeline lineno="10"><highlight class="comment"></highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>Unless<sp/>required<sp/>by<sp/>applicable<sp/>law<sp/>or<sp/>agreed<sp/>to<sp/>in<sp/>writing,<sp/>software</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>distributed<sp/>under<sp/>the<sp/>License<sp/>is<sp/>distributed<sp/>on<sp/>an<sp/>&quot;AS<sp/>IS&quot;<sp/>BASIS,</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>WITHOUT<sp/>WARRANTIES<sp/>OR<sp/>CONDITIONS<sp/>OF<sp/>ANY<sp/>KIND,<sp/>either<sp/>express<sp/>or<sp/>implied.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/>See<sp/>the<sp/>License<sp/>for<sp/>the<sp/>specific<sp/>language<sp/>governing<sp/>permissions<sp/>and</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>limitations<sp/>under<sp/>the<sp/>License.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>EF_I2C_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EF_I2C_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="29"><highlight class="comment">*<sp/>Includes</highlight></codeline>
<codeline lineno="30"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_e_f___i2_c__regs_8h" kindref="compound">EF_I2C_regs.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_e_f___driver___common_8h" kindref="compound">EF_Driver_Common.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="36"><highlight class="comment">*<sp/>Macros<sp/>and<sp/>Constants</highlight></codeline>
<codeline lineno="37"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*<sp/>Typedefs<sp/>and<sp/>Enums</highlight></codeline>
<codeline lineno="41"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="44"><highlight class="comment">*<sp/>Function<sp/>Prototypes</highlight></codeline>
<codeline lineno="45"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1acc45aacbd2537a2bff4c031f31866524" kindref="member">EF_I2C_setGclkEnable</ref><sp/>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a0f58ec9c8e2833a317849f6e7397f975" kindref="member">EF_I2C_writeAddress</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1af9b99ab7d998d458b3581d4efa7d5677" kindref="member">EF_I2C_startCmd</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a3f4fc47dc287dc172380017f5ba1ba76" kindref="member">EF_I2C_readCmd</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a65d02666b30dfa93ff84c2f050f0c4d4" kindref="member">EF_I2C_writeCmd</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>addr);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a32c3ace7f086e924ccf2d2a516781e0b" kindref="member">EF_I2C_writeMultipleCmd</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a41f2c6eaa708acaf5ec335305d081ab0" kindref="member">EF_I2C_stopCmd</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a463bc65949c17db4ea88309a639196cc" kindref="member">EF_I2C_setCommandReg</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1aeb43294563fcfca9026b591d8e56281b" kindref="member">EF_I2C_getCommandReg</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>command_value);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a36095bc30b2815da2586e7ca9d00dc07" kindref="member">EF_I2C_writeData</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>data);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a6cf63669e5cff65a8c0179c3ee604e11" kindref="member">EF_I2C_readData</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1adf55e1d9c0e04ce14f02b203cc162eb2" kindref="member">EF_I2C_setDataValid</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a0b9bab5ff86b97332323d405b91c6458" kindref="member">EF_I2C_getDataValid</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*data_valid);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a4508f26e14e7749976583e7edaa6dfb3" kindref="member">EF_I2C_setDataLast</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>valid);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a2f2106493a872e461d9636ffea9bdc3a" kindref="member">EF_I2C_getDataLast</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>*data_last);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a31085c48c88225577f50d3aa775a207e" kindref="member">EF_I2C_setDataReg</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a25225abd1caf2eaabd63c0fefc300e3a" kindref="member">EF_I2C_getDataReg</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>data_reg_value);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a31eb5194bd0194de3b76fc5a6a55de01" kindref="member">EF_I2C_setPrescaler</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t<sp/>value);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1aaf918c88e2ad08276957215d7e92be11" kindref="member">EF_I2C_getPrescaler</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>prescaler_value);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a9734206e847e18e8200a755541ded839" kindref="member">EF_I2C_getRIS</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>ris_value);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a116c0ec466973c1798769ca2a6072d44" kindref="member">EF_I2C_getMIS</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>mis_value);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1ae75ed322a00e605f0489213ee29d7230" kindref="member">EF_I2C_setIM</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t<sp/>mask);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="_e_f___driver___common_8h_1ad1c99136d1edfd0a7757f5b81600a351" kindref="member">EF_DRIVER_STATUS</ref><sp/><ref refid="_e_f___i2_c_8h_1a68f8ca9c1674b72b2b5045f00e0986a6" kindref="member">EF_I2C_getIM</ref>(<ref refid="struct___e_f___i2_c___t_y_p_e__" kindref="compound">EF_I2C_PTR</ref><sp/>i2c,<sp/>uint32_t*<sp/>im_value);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="73"><highlight class="comment">*<sp/>External<sp/>Variables</highlight></codeline>
<codeline lineno="74"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>EF_I2C_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="comment">/******************************************************************************</highlight></codeline>
<codeline lineno="81"><highlight class="comment">*<sp/>End<sp/>of<sp/>File</highlight></codeline>
<codeline lineno="82"><highlight class="comment">******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="EF_I2C.h"/>
  </compounddef>
</doxygen>
